// This is a code for catering company thing.

Text("  How Does It Work?",style: TextStyle(fontSize: 20,fontWeight: FontWeight.bold),),

              const SizedBox(height: 25,),

              // How does it Work
              SizedBox
              (
              height: 840,
              child: Column(
              children: 
              [
                // Row 1 of the Entire Column
                Row(children: [
                  Image.asset("images/menu.png",height: 105,),
                  const SizedBox(width: 16,),
                  Column
                  (
                    crossAxisAlignment: CrossAxisAlignment.start,
                  children: const [
                    Text("Customize Menu",style: TextStyle(color: Colors.deepPurpleAccent,fontSize: 22,fontWeight: FontWeight.bold),),
                    SizedBox(height: 5,),
                    Text("Select Items for a single Event",style: TextStyle(fontSize: 16),),
                    Text("Or Multiple Events",style: TextStyle(fontSize: 16),),
                  ],
                  )
                ],),
                const SizedBox(height: 22,),

                // Row 2 of the column
                Row(children: [
                  const SizedBox(width: 10,),
                  Column
                  (
                    crossAxisAlignment: CrossAxisAlignment.start,
                  children: const [
                    Text("Choose Services",style: TextStyle(color: Colors.deepPurpleAccent,fontSize: 22,fontWeight: FontWeight.bold),),
                    SizedBox(height: 5,),
                    Text("Select the type of Services",style: TextStyle(fontSize: 16),),
                    Text("from varying cutlery,mode of",style: TextStyle(fontSize: 16),),
                    Text("Serving options & more",style: TextStyle(fontSize: 16),),
                    Text("",style: TextStyle(fontSize: 16),),
                  ],
                  ),
                  const SizedBox(width: 25,),
                  Image.asset("images/service.jpeg",height: 105,)
                ],),
                const SizedBox(height: 18,),

                // Row 3 of the Column
                Row(children: [
                  Image.asset("images/pricing.jpeg",height: 80,),
                  
                  Column
                  (
                    crossAxisAlignment: CrossAxisAlignment.start,
                  children: const [
                    Text("Dynamic Pricing",style: TextStyle(color: Colors.deepPurpleAccent,fontSize: 22,fontWeight: FontWeight.bold),),
                    SizedBox(height: 5,),
                    Text("Price per plate varies with no ",style: TextStyle(fontSize: 16),),
                    Text("of Items in a plate and no of ",style: TextStyle(fontSize: 16),),
                    Text("plates selected",style: TextStyle(fontSize: 16),),
                    Text("",style: TextStyle(fontSize: 16),),
                  ],
                  )
                ],),
                const SizedBox(height: 18,),

                 // Row 4 of column 
                 Row(children: [
                  const SizedBox(width: 10,),
                  Column
                  (
                    crossAxisAlignment: CrossAxisAlignment.start,
                  children: const [
                    Text("Track Your Order",style: TextStyle(color: Colors.deepPurpleAccent,fontSize: 22,fontWeight: FontWeight.bold),),
                    SizedBox(height: 5,),
                    Text("Track the Order Status and",style: TextStyle(fontSize: 16),),
                    Text("seek help from the best",style: TextStyle(fontSize: 16),),
                    Text("executives anytime",style: TextStyle(fontSize: 16),),
                    Text("",style: TextStyle(fontSize: 16),),
                  ],
                  ),
                  const SizedBox(width: 28,),
                  Image.asset("images/trace.jpeg",height: 105,)
                ],),
                const SizedBox(height: 22,),

                // Row 5 of column
                Row(children: [
                  Image.asset("images/taste.jpeg",height: 100,),
                  const SizedBox(width: 6,),
                  Column
                  (
                    crossAxisAlignment: CrossAxisAlignment.start,
                  children: const [
                    Text(" Taste Your Samples",style: TextStyle(color: Colors.deepPurpleAccent,fontSize: 22,fontWeight: FontWeight.bold),),
                    SizedBox(height: 5,),
                    Text(" Explode Your Taste bud with",style: TextStyle(fontSize: 16),),
                    Text(" samples of what you order(on",style: TextStyle(fontSize: 16),),
                    Text(" request for eligible orders).",style: TextStyle(fontSize: 16),),
                    Text("",style: TextStyle(fontSize: 16),),
                  ],
                  )
                ],),
                const SizedBox(height: 12,),

                // Row 6 of column
                Row(children: [
                  const SizedBox(width: 10,),
                  Column
                  (
                    crossAxisAlignment: CrossAxisAlignment.start,
                  children: const [
                    Text("Enjoy Food and Services",style: TextStyle(color: Colors.deepPurpleAccent,fontSize: 22,fontWeight: FontWeight.bold),),
                    SizedBox(height: 5,),
                    Text("Enjoy Event with delicious",style: TextStyle(fontSize: 16),),
                    Text("and customized food",style: TextStyle(fontSize: 16),),
                  ],
                  ),
                  const SizedBox(width: 11,),
                  Image.asset("images/enjoy.jpeg",height: 105,)
                ],),
                const SizedBox(height: 18,),

                ],
              ),),

// Container(
              // height: 160 ,
              // child: ListView.separated(
              // scrollDirection: Axis.horizontal,
              // itemBuilder: (context,index) =>Buildcard(item: items[index]),
              // separatorBuilder: (context, _) => SizedBox(width: 10,),
              // itemCount: 5)),

// ignore: non_constant_identifier_names
Widget Buildcard(
  {
    required CardItem item,
  }
) => Container(
                    decoration: BoxDecoration
                (
                  borderRadius: BorderRadius.circular(10),
                  color: Colors.red,
                ),
                  width: 150,
                  child: Column(
                    children: [
                      Expanded(
                      child: AspectRatio(
                        aspectRatio: 4/2,
                        child: ClipRRect(borderRadius: BorderRadius.circular(10),
                        child: Image.asset(item.urlImage,
                        fit:BoxFit.cover),),
                        ),
                    ),
                    // Text(
                    //   item.title,
                    //   style: TextStyle(color: Colors.white,fontSize: 16),
                    // ),
                    ]
                  ),
);

// {
//   "type": "service_account",
//   "project_id": "royalplatechatbot-drpr",
//   "private_key_id": "e2743a0fb66bcda557f9f1ec77cff7798d58a208",
//   "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDOWEYPNdzgTFAe\ne7+pmJzAiAbF6J6hGa0T+VvyHTYlepHHi60H1lgSt0Eg4pypqMyrLIHxlIgxElez\nvRehi3U4MvQv4vEO9Yxwz1gciSMkbpM0CE2mW4Kr/UYDVUSF1RIU5YSwcD6i9FHL\noSVTq4sbzxd+oP0voEqUQ14fJvRDRsqTC4V84amfrdJkO58yVmo6ubIFD77hriOZ\no+L7HguAoaQyEu+euCMc56k5HcKFeYUQDy2E3TtjaWgsFbX1HK2X83Z3qHdKaxTG\nAPsA6vrByPeJm8cFIsx4rA8Fp4cNIwc7xQHWpl9ZJhv7ENZgV4in+V9xeG7jEB9r\nqILMs1HFAgMBAAECggEAAg+tA3yM7EtW3DcYPwrLO2Z1ytxRWVf2+/rDCbQeVQQt\nw0nd50ojhGxYNjU3+L867CrRptF5BXnNbno2a41dFRFNPH05Mzu4tMJy0DYpJ7VY\nZcNUzeiexuEM0KkKujDasWK+5JRPy95CQup6g6TJtZ69Tq0vr54boJzbqoFVHKbq\ncs5YVJDJrt6KTVxeE9+UkH1SD0FwuDhAO23ZZdG2wG+Gm+CAw9JNg/c0iVr6usmi\n33GnKk5u0wg2v3phLDyHl0Nn3fuyEsycFdU0+L8lbJ4SwPgi5c94+1TzjNzJdZor\nretDTf1DUJgvT4vcEmAEM6sq8a/9rfIsNeYl4rfLAQKBgQD0Ihudv0q17ZzYZRrO\n6v1UICaEO0k70Gpi50RODwNphc6P8heIoNwJ1HPsOXNBTOiRzXHkO9JD9neMkdlS\nw5cMhTClNq4KlyTZIhrdohOwmS+lc8dTJun80BtkELAxEhBsLtf3FkKuM8l7tydG\n2YrXwDF59RfOou4mzve+WcQalQKBgQDYX/FJJOhzkacy3cIkIKN5I75/8RMqTeMe\nq9MBgADck74TcNFwxWSzP06GCLgHDBr9Q/kSjkiRtDqtUdgG7Zj86wG5P5XGchhE\nEe1cNyttLw1QX8d4UhXUTAuhYlM8BR+pF8Rqt9NHnwpIxxq4XQ3mNba2Og5+pVbU\nm8SqCoW+cQKBgHGdvgR4Fij84FXFF+jca/FO1R4NCVQQ9rH4t00sp4Xgg/Vx0YoA\ncucQPLLfOchWJpZUaoCxZnXCqnh9GArwg8eL5Mu+2tiK5tc2jBJBb7BsWkRB0a3d\nGmBR6a10JstvgL0YP+H6NiYka8xrvJe4fmlSRLRhYCcGpJbjE2E/HYjRAoGBAIRc\nHGOcGj4oCVmKYiprdNSz0uK8+/ZS8u5eOZOfU+ea0RlfWB9eAL3NqiE/0CMveosX\nO5PoSegnkgVYHYgPbBi7QbCqftqIDOQG+2X/sab2s3RJQuINhKD7a9nrJfN/RuDP\nUy3dCXe0iDwA4A2LjucWUJCkbx110un355QFH89hAoGBANS0QFOUYmm8Zd3PvG8Q\n7JXEJ1UG4kpgC5G5sQWBULNoUWTDBViMo66Ik89lSWcMM0jS56aUOUBrN9JQ32k/\nTOpf/APFn8ulisNB/jdvZOciOwyaIeqZp2P2Z/E3p1IRqo86PmxmyEBC20qoJymg\nAxNwRTOEIBRpmYQJbLUqE/xH\n-----END PRIVATE KEY-----\n",
//   "client_email": "royalplatechatbot@royalplatechatbot-drpr.iam.gserviceaccount.com",
//   "client_id": "102852180177827167702",
//   "auth_uri": "https://accounts.google.com/o/oauth2/auth",
//   "token_uri": "https://oauth2.googleapis.com/token",
//   "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
//   "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/royalplatechatbot%40royalplatechatbot-drpr.iam.gserviceaccount.com",
//   "universe_domain": "googleapis.com"
// }


Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: Container(
                  height: 55,
                  decoration: BoxDecoration(
                      border: Border.all(width: 1, color: Colors.grey),
                      borderRadius: BorderRadius.circular(10)),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      SizedBox(
                        width: 10,
                      ),
                      SizedBox(
                        width: 40,
                        child: TextField(
                          controller: _contactcontroller,
                          keyboardType: TextInputType.number,
                          decoration: InputDecoration(
                            border: InputBorder.none,
                          ),
                        ),
                      ),
                      Text(
                        "|",
                        style: TextStyle(fontSize: 33, color: Colors.grey),
                      ),
                      SizedBox(
                        width: 10,
                      ),
                      Expanded(
                          child: TextField(
                        keyboardType: TextInputType.phone,
                        decoration: InputDecoration(
                          border: InputBorder.none,
                          hintText: "Phone",
                        ),
                      ))
                    ],
                  ),
                              ),
                ),